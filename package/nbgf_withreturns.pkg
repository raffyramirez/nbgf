-- --------------------------------------------------------------------------
-- NAME         : nbgf.pkg
-- AUTHOR       : Raffy Ramirez (full name: Rafael Santos Ramirez)
-- DESCRIPTION  : Non-Blocking Gap-Free sequence stored package header
--                see https://github.com/raffyramirez/nbgf
-- REQUIREMENTS : nbgf tables
-- LICENSE      : MIT license - Free for personal and commercial use.
--                You can change the code, but leave existing the headers,
--                modification history and links intact.
-- HISTORY      : (author dev names: rramirez, rsramirez)
-- When         Who       What
-- ===========  ========  =================================================
-- 2019-JAN-03  rramirez  ported to 18c from old 7,8i and 9i code
-- --------------------------------------------------------------------------

CREATE OR REPLACE
PACKAGE nbgf
AS

PROCEDURE init_prev_seqno(p_seqname VARCHAR2 DEFAULT NULL);

PROCEDURE create_sequence(p_seqname VARCHAR2, p_start_with NUMBER DEFAULT 1,
  p_increment_by NUMBER DEFAULT 1, p_max_value NUMBER DEFAULT NULL,
  p_ordered NUMBER DEFAULT 0, p_cache_size NUMBER DEFAULT 10, 
  p_max_retry NUMBER DEFAULT 5, p_retry_wait NUMBER DEFAULT 1, 
  p_disabled NUMBER DEFAULT 0);

PROCEDURE drop_sequence(p_seqname VARCHAR2);

PROCEDURE disable_sequence(p_seqname VARCHAR2);

PROCEDURE enable_sequence(p_seqname VARCHAR2);

PROCEDURE restart_sequence(p_seqname VARCHAR2);

PROCEDURE alter_sequence(p_seqname VARCHAR2, p_max_value NUMBER,
  p_start_with NUMBER DEFAULT NULL, p_increment_by NUMBER DEFAULT NULL, 
  p_ordered NUMBER DEFAULT NULL, p_cache_size NUMBER DEFAULT NULL,
  p_max_retry NUMBER DEFAULT NULL, p_retry_wait NUMBER DEFAULT NULL);

PROCEDURE alter_sequence(p_seqname VARCHAR2, 
  p_start_with NUMBER DEFAULT NULL, p_increment_by NUMBER DEFAULT NULL, 
  p_ordered NUMBER DEFAULT NULL, p_cache_size NUMBER DEFAULT NULL,
  p_max_retry NUMBER DEFAULT NULL, p_retry_wait NUMBER DEFAULT NULL);

FUNCTION next_seqno(p_seqname VARCHAR2, p_prev_seqno IN NUMBER)
RETURN NUMBER;

FUNCTION next_seqno(p_seqname VARCHAR2)
RETURN NUMBER;

PROCEDURE return_seqno(p_seqname VARCHAR2, p_seqno NUMBER);

END nbgf;
/

